{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "default": {},
    "title": "Root Schema",
    "required": [
        "global",
        "httpPort",
        "grpcPort",
        "workerServiceGrpcPort",
        "internalGrpcPort",
        "monitoringPort",
        "adminPort",
        "modelManagerServerAddr",
        "vectorStoreManagerServerAddr",
        "vectorStoreManagerInternalServerAddr",
        "service",
        "workerServiceGrpcService",
        "workerServiceTls",
        "certificate",
        "requestRouting",
        "kubernetesManager",
        "enableServiceMonitor",
        "enablePrometheusRule",
        "serviceAccount",
        "replicaCount",
        "image",
        "resources",
        "livenessProbe",
        "podSecurityContext",
        "securityContext"
    ],
    "properties": {
        "global": {
            "type": "object",
            "default": {},
            "title": "The global Schema",
            "required": [
                "ingress",
                "workerServiceGrpcService",
                "auth",
                "usageSender"
            ],
            "properties": {
                "ingress": {
                    "type": "object",
                    "default": {},
                    "title": "The ingress Schema",
                    "required": [
                        "ingressClassName"
                    ],
                    "properties": {
                        "ingressClassName": {
                            "type": "string",
                            "default": "",
                            "title": "The ingressClassName Schema",
                            "examples": [
                                "kong"
                            ]
                        }
                    },
                    "examples": [{
                        "ingressClassName": "kong"
                    }]
                },
                "workerServiceGrpcService": {
                    "type": "object",
                    "default": {},
                    "title": "The workerServiceGrpcService Schema",
                    "required": [
                        "annotations"
                    ],
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "default": {},
                            "title": "The annotations Schema",
                            "required": [],
                            "properties": {},
                            "examples": [{}]
                        }
                    },
                    "examples": [{
                        "annotations": {}
                    }]
                },
                "auth": {
                    "type": "object",
                    "default": {},
                    "title": "The auth Schema",
                    "required": [
                        "enable",
                        "rbacInternalServerAddr"
                    ],
                    "properties": {
                        "enable": {
                            "type": "boolean",
                            "default": false,
                            "title": "The enable Schema",
                            "examples": [
                                true
                            ]
                        },
                        "rbacInternalServerAddr": {
                            "type": "string",
                            "default": "",
                            "title": "The rbacInternalServerAddr Schema",
                            "examples": [
                                "rbac-server-internal-grpc:8082"
                            ]
                        }
                    },
                    "examples": [{
                        "enable": true,
                        "rbacInternalServerAddr": "rbac-server-internal-grpc:8082"
                    }]
                },
                "usageSender": {
                    "type": "object",
                    "default": {},
                    "title": "The usageSender Schema",
                    "required": [
                        "apiUsageInternalServerAddr"
                    ],
                    "properties": {
                        "apiUsageInternalServerAddr": {
                            "type": "string",
                            "default": "",
                            "title": "The apiUsageInternalServerAddr Schema",
                            "examples": [
                                "api-usage-server-internal-grpc:8082"
                            ]
                        }
                    },
                    "examples": [{
                        "apiUsageInternalServerAddr": "api-usage-server-internal-grpc:8082"
                    }]
                }
            },
            "examples": [{
                "ingress": {
                    "ingressClassName": "kong"
                },
                "workerServiceGrpcService": {
                    "annotations": {}
                },
                "auth": {
                    "enable": true,
                    "rbacInternalServerAddr": "rbac-server-internal-grpc:8082"
                },
                "usageSender": {
                    "apiUsageInternalServerAddr": "api-usage-server-internal-grpc:8082"
                }
            }]
        },
        "httpPort": {
            "type": "integer",
            "default": 0,
            "title": "The httpPort Schema",
            "examples": [
                8080
            ]
        },
        "grpcPort": {
            "type": "integer",
            "default": 0,
            "title": "The grpcPort Schema",
            "examples": [
                8081
            ]
        },
        "workerServiceGrpcPort": {
            "type": "integer",
            "default": 0,
            "title": "The workerServiceGrpcPort Schema",
            "examples": [
                8082
            ]
        },
        "internalGrpcPort": {
            "type": "integer",
            "default": 0,
            "title": "The internalGrpcPort Schema",
            "examples": [
                8083
            ]
        },
        "monitoringPort": {
            "type": "integer",
            "default": 0,
            "title": "The monitoringPort Schema",
            "examples": [
                8084
            ]
        },
        "adminPort": {
            "type": "integer",
            "default": 0,
            "title": "The adminPort Schema",
            "examples": [
                8085
            ]
        },
        "modelManagerServerAddr": {
            "type": "string",
            "default": "",
            "title": "The modelManagerServerAddr Schema",
            "examples": [
                "model-manager-server-grpc:8081"
            ]
        },
        "vectorStoreManagerServerAddr": {
            "type": "string",
            "default": "",
            "title": "The vectorStoreManagerServerAddr Schema",
            "examples": [
                "vector-store-manager-server-grpc:8081"
            ]
        },
        "vectorStoreManagerInternalServerAddr": {
            "type": "string",
            "default": "",
            "title": "The vectorStoreManagerInternalServerAddr Schema",
            "examples": [
                "vector-store-manager-server-internal-grpc:8083"
            ]
        },
        "service": {
            "type": "object",
            "default": {},
            "title": "The service Schema",
            "required": [
                "annotations"
            ],
            "properties": {
                "annotations": {
                    "type": "object",
                    "default": {},
                    "title": "The annotations Schema",
                    "required": [],
                    "properties": {},
                    "examples": [{}]
                }
            },
            "examples": [{
                "annotations": {}
            }]
        },
        "workerServiceGrpcService": {
            "type": "object",
            "default": {},
            "title": "The workerServiceGrpcService Schema",
            "required": [
                "type",
                "port"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "default": "",
                    "title": "The type Schema",
                    "examples": [
                        "ClusterIP"
                    ]
                },
                "port": {
                    "type": "integer",
                    "default": 0,
                    "title": "The port Schema",
                    "examples": [
                        8082
                    ]
                }
            },
            "examples": [{
                "type": "ClusterIP",
                "port": 8082
            }]
        },
        "workerServiceTls": {
            "type": "object",
            "default": {},
            "title": "The workerServiceTls Schema",
            "required": [
                "enable",
                "secretName"
            ],
            "properties": {
                "enable": {
                    "type": "boolean",
                    "default": false,
                    "title": "The enable Schema",
                    "examples": [
                        false
                    ]
                },
                "secretName": {
                    "type": "string",
                    "default": "",
                    "title": "The secretName Schema",
                    "examples": [
                        "session-tls"
                    ]
                }
            },
            "examples": [{
                "enable": false,
                "secretName": "session-tls"
            }]
        },
        "certificate": {
            "type": "object",
            "default": {},
            "title": "The certificate Schema",
            "required": [
                "create",
                "name",
                "issuerRef"
            ],
            "properties": {
                "create": {
                    "type": "boolean",
                    "default": false,
                    "title": "The create Schema",
                    "examples": [
                        false
                    ]
                },
                "name": {
                    "type": "string",
                    "default": "",
                    "title": "The name Schema",
                    "examples": [
                        "session-tls"
                    ]
                },
                "issuerRef": {
                    "type": "object",
                    "default": {},
                    "title": "The issuerRef Schema",
                    "required": [
                        "kind"
                    ],
                    "properties": {
                        "kind": {
                            "type": "string",
                            "default": "",
                            "title": "The kind Schema",
                            "examples": [
                                "ClusterIssuer"
                            ]
                        }
                    },
                    "examples": [{
                        "kind": "ClusterIssuer"
                    }]
                }
            },
            "examples": [{
                "create": false,
                "name": "session-tls",
                "issuerRef": {
                    "kind": "ClusterIssuer"
                }
            }]
        },
        "requestRouting": {
            "type": "object",
            "default": {},
            "title": "The requestRouting Schema",
            "required": [
                "enableDynamicModelLoading"
            ],
            "properties": {
                "enableDynamicModelLoading": {
                    "type": "boolean",
                    "default": false,
                    "title": "The enableDynamicModelLoading Schema",
                    "examples": [
                        true
                    ]
                }
            },
            "examples": [{
                "enableDynamicModelLoading": true
            }]
        },
        "kubernetesManager": {
            "type": "object",
            "default": {},
            "title": "The kubernetesManager Schema",
            "required": [
                "enableLeaderElection",
                "metricsBindAddress"
            ],
            "properties": {
                "enableLeaderElection": {
                    "type": "boolean",
                    "default": false,
                    "title": "The enableLeaderElection Schema",
                    "examples": [
                        false
                    ]
                },
                "metricsBindAddress": {
                    "type": "string",
                    "default": "",
                    "title": "The metricsBindAddress Schema",
                    "examples": [
                        "8086"
                    ]
                }
            },
            "examples": [{
                "enableLeaderElection": false,
                "metricsBindAddress": "8086"
            }]
        },
        "enableServiceMonitor": {
            "type": "boolean",
            "default": false,
            "title": "The enableServiceMonitor Schema",
            "examples": [
                false
            ]
        },
        "enablePrometheusRule": {
            "type": "boolean",
            "default": false,
            "title": "The enablePrometheusRule Schema",
            "examples": [
                false
            ]
        },
        "serviceAccount": {
            "type": "object",
            "default": {},
            "title": "The serviceAccount Schema",
            "required": [
                "create"
            ],
            "properties": {
                "create": {
                    "type": "boolean",
                    "default": false,
                    "title": "The create Schema",
                    "examples": [
                        true
                    ]
                }
            },
            "examples": [{
                "create": true
            }]
        },
        "replicaCount": {
            "type": "integer",
            "default": 0,
            "title": "The replicaCount Schema",
            "examples": [
                1
            ]
        },
        "image": {
            "type": "object",
            "default": {},
            "title": "The image Schema",
            "required": [
                "repository",
                "pullPolicy"
            ],
            "properties": {
                "repository": {
                    "type": "string",
                    "default": "",
                    "title": "The repository Schema",
                    "examples": [
                        "public.ecr.aws/cloudnatix/llmariner/inference-manager-server"
                    ]
                },
                "pullPolicy": {
                    "type": "string",
                    "default": "",
                    "title": "The pullPolicy Schema",
                    "examples": [
                        "IfNotPresent"
                    ]
                }
            },
            "examples": [{
                "repository": "public.ecr.aws/cloudnatix/llmariner/inference-manager-server",
                "pullPolicy": "IfNotPresent"
            }]
        },
        "resources": {
            "type": "object",
            "default": {},
            "title": "The resources Schema",
            "required": [
                "requests",
                "limits"
            ],
            "properties": {
                "requests": {
                    "type": "object",
                    "default": {},
                    "title": "The requests Schema",
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "type": "string",
                            "default": "",
                            "title": "The cpu Schema",
                            "examples": [
                                "250m"
                            ]
                        },
                        "memory": {
                            "type": "string",
                            "default": "",
                            "title": "The memory Schema",
                            "examples": [
                                "500Mi"
                            ]
                        }
                    },
                    "examples": [{
                        "cpu": "250m",
                        "memory": "500Mi"
                    }]
                },
                "limits": {
                    "type": "object",
                    "default": {},
                    "title": "The limits Schema",
                    "required": [
                        "cpu"
                    ],
                    "properties": {
                        "cpu": {
                            "type": "string",
                            "default": "",
                            "title": "The cpu Schema",
                            "examples": [
                                "1000m"
                            ]
                        }
                    },
                    "examples": [{
                        "cpu": "1000m"
                    }]
                }
            },
            "examples": [{
                "requests": {
                    "cpu": "250m",
                    "memory": "500Mi"
                },
                "limits": {
                    "cpu": "1000m"
                }
            }]
        },
        "livenessProbe": {
            "type": "object",
            "default": {},
            "title": "The livenessProbe Schema",
            "required": [
                "enabled",
                "initialDelaySeconds",
                "periodSeconds",
                "timeoutSeconds",
                "successThreshold",
                "failureThreshold"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "default": false,
                    "title": "The enabled Schema",
                    "examples": [
                        true
                    ]
                },
                "initialDelaySeconds": {
                    "type": "integer",
                    "default": 0,
                    "title": "The initialDelaySeconds Schema",
                    "examples": [
                        3
                    ]
                },
                "periodSeconds": {
                    "type": "integer",
                    "default": 0,
                    "title": "The periodSeconds Schema",
                    "examples": [
                        10
                    ]
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "default": 0,
                    "title": "The timeoutSeconds Schema",
                    "examples": [
                        3
                    ]
                },
                "successThreshold": {
                    "type": "integer",
                    "default": 0,
                    "title": "The successThreshold Schema",
                    "examples": [
                        1
                    ]
                },
                "failureThreshold": {
                    "type": "integer",
                    "default": 0,
                    "title": "The failureThreshold Schema",
                    "examples": [
                        5
                    ]
                }
            },
            "examples": [{
                "enabled": true,
                "initialDelaySeconds": 3,
                "periodSeconds": 10,
                "timeoutSeconds": 3,
                "successThreshold": 1,
                "failureThreshold": 5
            }]
        },
        "podSecurityContext": {
            "type": "object",
            "default": {},
            "title": "The podSecurityContext Schema",
            "required": [
                "fsGroup"
            ],
            "properties": {
                "fsGroup": {
                    "type": "integer",
                    "default": 0,
                    "title": "The fsGroup Schema",
                    "examples": [
                        2000
                    ]
                }
            },
            "examples": [{
                "fsGroup": 2000
            }]
        },
        "securityContext": {
            "type": "object",
            "default": {},
            "title": "The securityContext Schema",
            "required": [
                "readOnlyRootFilesystem",
                "capabilities",
                "runAsNonRoot",
                "runAsUser"
            ],
            "properties": {
                "readOnlyRootFilesystem": {
                    "type": "boolean",
                    "default": false,
                    "title": "The readOnlyRootFilesystem Schema",
                    "examples": [
                        true
                    ]
                },
                "capabilities": {
                    "type": "object",
                    "default": {},
                    "title": "The capabilities Schema",
                    "required": [
                        "drop"
                    ],
                    "properties": {
                        "drop": {
                            "type": "array",
                            "default": [],
                            "title": "The drop Schema",
                            "items": {
                                "type": "string",
                                "default": "",
                                "title": "A Schema",
                                "examples": [
                                    "ALL"
                                ]
                            },
                            "examples": [
                                [
                                    "ALL"]
                            ]
                        }
                    },
                    "examples": [{
                        "drop": [
                            "ALL"
                        ]
                    }]
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "default": false,
                    "title": "The runAsNonRoot Schema",
                    "examples": [
                        true
                    ]
                },
                "runAsUser": {
                    "type": "integer",
                    "default": 0,
                    "title": "The runAsUser Schema",
                    "examples": [
                        1000
                    ]
                }
            },
            "examples": [{
                "readOnlyRootFilesystem": true,
                "capabilities": {
                    "drop": [
                        "ALL"
                    ]
                },
                "runAsNonRoot": true,
                "runAsUser": 1000
            }]
        }
    },
    "examples": [{
        "global": {
            "ingress": {
                "ingressClassName": "kong"
            },
            "workerServiceGrpcService": {
                "annotations": {}
            },
            "auth": {
                "enable": true,
                "rbacInternalServerAddr": "rbac-server-internal-grpc:8082"
            },
            "usageSender": {
                "apiUsageInternalServerAddr": "api-usage-server-internal-grpc:8082"
            }
        },
        "httpPort": 8080,
        "grpcPort": 8081,
        "workerServiceGrpcPort": 8082,
        "internalGrpcPort": 8083,
        "monitoringPort": 8084,
        "adminPort": 8085,
        "modelManagerServerAddr": "model-manager-server-grpc:8081",
        "vectorStoreManagerServerAddr": "vector-store-manager-server-grpc:8081",
        "vectorStoreManagerInternalServerAddr": "vector-store-manager-server-internal-grpc:8083",
        "service": {
            "annotations": {}
        },
        "workerServiceGrpcService": {
            "type": "ClusterIP",
            "port": 8082
        },
        "workerServiceTls": {
            "enable": false,
            "secretName": "session-tls"
        },
        "certificate": {
            "create": false,
            "name": "session-tls",
            "issuerRef": {
                "kind": "ClusterIssuer"
            }
        },
        "requestRouting": {
            "enableDynamicModelLoading": true
        },
        "kubernetesManager": {
            "enableLeaderElection": false,
            "metricsBindAddress": "8086"
        },
        "enableServiceMonitor": false,
        "enablePrometheusRule": false,
        "serviceAccount": {
            "create": true
        },
        "replicaCount": 1,
        "image": {
            "repository": "public.ecr.aws/cloudnatix/llmariner/inference-manager-server",
            "pullPolicy": "IfNotPresent"
        },
        "resources": {
            "requests": {
                "cpu": "250m",
                "memory": "500Mi"
            },
            "limits": {
                "cpu": "1000m"
            }
        },
        "livenessProbe": {
            "enabled": true,
            "initialDelaySeconds": 3,
            "periodSeconds": 10,
            "timeoutSeconds": 3,
            "successThreshold": 1,
            "failureThreshold": 5
        },
        "podSecurityContext": {
            "fsGroup": 2000
        },
        "securityContext": {
            "readOnlyRootFilesystem": true,
            "capabilities": {
                "drop": [
                    "ALL"
                ]
            },
            "runAsNonRoot": true,
            "runAsUser": 1000
        }
    }]
}
