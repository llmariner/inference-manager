{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/inference_server_internal.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "InferenceInternalService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "ContentAudioUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "description": "AudioUrl is non-openai compatible. It is used by vLLM to handle audio input."
    },
    "ContentImageUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      },
      "title": "Refer to https://platform.openai.com/docs/api-reference/chat/create#chat-create-messages"
    },
    "ContentInputAudio": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "CreateChatCompletionRequestMessageContent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "imageUrl": {
          "$ref": "#/definitions/ContentImageUrl"
        },
        "inputAudio": {
          "$ref": "#/definitions/ContentInputAudio"
        },
        "audioUrl": {
          "$ref": "#/definitions/ContentAudioUrl"
        }
      }
    },
    "CreateChatCompletionRequestMessageToolCall": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "function": {
          "$ref": "#/definitions/CreateChatCompletionRequestMessageToolCallFunction"
        }
      }
    },
    "CreateChatCompletionRequestMessageToolCallFunction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "arguments": {
          "type": "string"
        }
      }
    },
    "CreateChatCompletionRequestResponseFormat": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "CreateChatCompletionRequestStreamOptions": {
      "type": "object",
      "properties": {
        "includeUsage": {
          "type": "boolean"
        }
      }
    },
    "CreateChatCompletionRequestTool": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "function": {
          "$ref": "#/definitions/CreateChatCompletionRequestToolFunction"
        }
      }
    },
    "CreateChatCompletionRequestToolChoice": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "function": {
          "$ref": "#/definitions/CreateChatCompletionRequestToolChoiceFunction"
        }
      }
    },
    "CreateChatCompletionRequestToolChoiceFunction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "CreateChatCompletionRequestToolFunction": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "encodedParameters": {
          "type": "string",
          "description": "OpenAI API has the \"parameters\" field that stores a JSON Schema object.\nAs we cannot have a JSON Schema object in the proto, we encode the JSON Schema object\nwith base64 and store it before unmarshalling it in the server.\n\nThe field is converted to the \"parameters\" field when the request is being\nsent to an inference runtime."
        }
      }
    },
    "EngineStatusModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "isReady": {
          "type": "boolean"
        },
        "inProgressTaskCount": {
          "type": "integer",
          "format": "int32"
        },
        "gpuAllocated": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EngineStatusSyncStatus": {
      "type": "object",
      "properties": {
        "inProgressModelIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "in_progress_model_ids is a list of model ids that are currently being synced."
        }
      }
    },
    "ServerStatusEngineStatusWithTenantID": {
      "type": "object",
      "properties": {
        "engineStatus": {
          "$ref": "#/definitions/v1EngineStatus"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateChatCompletionRequest": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CreateChatCompletionRequestMessage"
          },
          "description": "TODO(kenji): Revisit this."
        },
        "model": {
          "type": "string"
        },
        "frequencyPenalty": {
          "type": "number",
          "format": "double"
        },
        "logitBias": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "logprobs": {
          "type": "boolean"
        },
        "topLogprobs": {
          "type": "integer",
          "format": "int32"
        },
        "maxTokens": {
          "type": "integer",
          "format": "int32",
          "title": "MaxTokens\nDeprecated: This value is now deprecated in favor of MaxCompletionTokens"
        },
        "n": {
          "type": "integer",
          "format": "int32"
        },
        "presencePenalty": {
          "type": "number",
          "format": "double"
        },
        "responseFormat": {
          "$ref": "#/definitions/CreateChatCompletionRequestResponseFormat"
        },
        "seed": {
          "type": "integer",
          "format": "int32"
        },
        "stop": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "string / arrary/ null"
        },
        "stream": {
          "type": "boolean"
        },
        "streamOptions": {
          "$ref": "#/definitions/CreateChatCompletionRequestStreamOptions"
        },
        "temperature": {
          "type": "number",
          "format": "double"
        },
        "topP": {
          "type": "number",
          "format": "double"
        },
        "tools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateChatCompletionRequestTool"
          }
        },
        "toolChoice": {
          "type": "string",
          "description": "The type of the \"tool_choice\" field is a string or an object.\nAs we cannot have a string or an object in the proto, we use the \"tool_choice_obj\"\nif a request sets the \"tool_choice\" field as an object.\n\nThe \"tool_choice_object\" field is converted to the \"tool_choice\" field when the request is being\nsent to an inference runtime."
        },
        "toolChoiceObject": {
          "$ref": "#/definitions/CreateChatCompletionRequestToolChoice"
        },
        "user": {
          "type": "string"
        },
        "maxCompletionTokens": {
          "type": "integer",
          "format": "int32",
          "title": "MaxCompletionTokens specifies the maximum limit on the number of tokens that can be generated during a completion.`"
        }
      }
    },
    "v1CreateChatCompletionRequestMessage": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateChatCompletionRequestMessageContent"
          },
          "description": "The type of the content is either string or array in the OpenAI API spec, but\nwe only support the array type here. When a client sends a string, it is converted before\nthe request is being unmarshalled."
        },
        "role": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "toolCalls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateChatCompletionRequestMessageToolCall"
          }
        },
        "toolCallId": {
          "type": "string",
          "description": "Used by the \"Tool message\"."
        }
      },
      "description": "Message has fields for system message, user message, assistant message, and tool message."
    },
    "v1CreateEmbeddingRequest": {
      "type": "object",
      "properties": {
        "input": {
          "type": "string",
          "description": "The \"input\" field can be a string, an array of strings, an array of integers, or an array of arrays of integers.\nAs that is not supported by proto, if the input is not a stryg, we move the value of the \"input\" field to \"encoded_input\"\nand remove the field before unmarshalling."
        },
        "encodedInput": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "encodingFormat": {
          "type": "string"
        },
        "dimensions": {
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "v1EngineStatus": {
      "type": "object",
      "properties": {
        "engineId": {
          "type": "string"
        },
        "modelIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "syncStatus": {
          "$ref": "#/definitions/EngineStatusSyncStatus"
        },
        "ready": {
          "type": "boolean"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EngineStatusModel"
          }
        }
      }
    },
    "v1HeaderValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1HttpResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "header": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1HeaderValue"
          }
        },
        "body": {
          "type": "string",
          "format": "byte",
          "description": "body is empty for server sent events."
        }
      }
    },
    "v1ProcessTasksInternalResponse": {
      "type": "object",
      "properties": {
        "newTask": {
          "$ref": "#/definitions/v1Task"
        },
        "tenantId": {
          "type": "string"
        }
      }
    },
    "v1ServerSentEvent": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "isLastEvent": {
          "type": "boolean"
        }
      }
    },
    "v1ServerStatus": {
      "type": "object",
      "properties": {
        "podName": {
          "type": "string"
        },
        "engineStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerStatusEngineStatusWithTenantID"
          }
        }
      }
    },
    "v1Task": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "request": {
          "$ref": "#/definitions/v1TaskRequest"
        },
        "header": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1HeaderValue"
          }
        }
      }
    },
    "v1TaskRequest": {
      "type": "object",
      "properties": {
        "chatCompletion": {
          "$ref": "#/definitions/v1CreateChatCompletionRequest"
        },
        "embedding": {
          "$ref": "#/definitions/v1CreateEmbeddingRequest"
        }
      }
    },
    "v1TaskResult": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "httpResponse": {
          "$ref": "#/definitions/v1HttpResponse"
        },
        "serverSentEvent": {
          "$ref": "#/definitions/v1ServerSentEvent"
        }
      }
    }
  }
}
