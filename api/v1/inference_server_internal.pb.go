// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1/inference_server_internal.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName        string                                   `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	EngineStatuses []*ServerStatus_EngineStatusWithTenantID `protobuf:"bytes,4,rep,name=engine_statuses,json=engineStatuses,proto3" json:"engine_statuses,omitempty"`
}

func (x *ServerStatus) Reset() {
	*x = ServerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_inference_server_internal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatus) ProtoMessage() {}

func (x *ServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_inference_server_internal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatus.ProtoReflect.Descriptor instead.
func (*ServerStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_inference_server_internal_proto_rawDescGZIP(), []int{0}
}

func (x *ServerStatus) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ServerStatus) GetEngineStatuses() []*ServerStatus_EngineStatusWithTenantID {
	if x != nil {
		return x.EngineStatuses
	}
	return nil
}

type ProcessTasksInternalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ProcessTasksInternalRequest_ServerStatus
	//	*ProcessTasksInternalRequest_TaskResult
	Message isProcessTasksInternalRequest_Message `protobuf_oneof:"message"`
}

func (x *ProcessTasksInternalRequest) Reset() {
	*x = ProcessTasksInternalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_inference_server_internal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTasksInternalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTasksInternalRequest) ProtoMessage() {}

func (x *ProcessTasksInternalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_inference_server_internal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTasksInternalRequest.ProtoReflect.Descriptor instead.
func (*ProcessTasksInternalRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_inference_server_internal_proto_rawDescGZIP(), []int{1}
}

func (m *ProcessTasksInternalRequest) GetMessage() isProcessTasksInternalRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ProcessTasksInternalRequest) GetServerStatus() *ServerStatus {
	if x, ok := x.GetMessage().(*ProcessTasksInternalRequest_ServerStatus); ok {
		return x.ServerStatus
	}
	return nil
}

func (x *ProcessTasksInternalRequest) GetTaskResult() *TaskResult {
	if x, ok := x.GetMessage().(*ProcessTasksInternalRequest_TaskResult); ok {
		return x.TaskResult
	}
	return nil
}

type isProcessTasksInternalRequest_Message interface {
	isProcessTasksInternalRequest_Message()
}

type ProcessTasksInternalRequest_ServerStatus struct {
	ServerStatus *ServerStatus `protobuf:"bytes,1,opt,name=server_status,json=serverStatus,proto3,oneof"`
}

type ProcessTasksInternalRequest_TaskResult struct {
	TaskResult *TaskResult `protobuf:"bytes,2,opt,name=task_result,json=taskResult,proto3,oneof"`
}

func (*ProcessTasksInternalRequest_ServerStatus) isProcessTasksInternalRequest_Message() {}

func (*ProcessTasksInternalRequest_TaskResult) isProcessTasksInternalRequest_Message() {}

type ProcessTasksInternalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTask  *Task  `protobuf:"bytes,1,opt,name=new_task,json=newTask,proto3" json:"new_task,omitempty"`
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *ProcessTasksInternalResponse) Reset() {
	*x = ProcessTasksInternalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_inference_server_internal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTasksInternalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTasksInternalResponse) ProtoMessage() {}

func (x *ProcessTasksInternalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_inference_server_internal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTasksInternalResponse.ProtoReflect.Descriptor instead.
func (*ProcessTasksInternalResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_inference_server_internal_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessTasksInternalResponse) GetNewTask() *Task {
	if x != nil {
		return x.NewTask
	}
	return nil
}

func (x *ProcessTasksInternalResponse) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ServerStatus_EngineStatusWithTenantID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EngineStatus *EngineStatus `protobuf:"bytes,2,opt,name=engine_status,json=engineStatus,proto3" json:"engine_status,omitempty"`
	TenantId     string        `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *ServerStatus_EngineStatusWithTenantID) Reset() {
	*x = ServerStatus_EngineStatusWithTenantID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_inference_server_internal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStatus_EngineStatusWithTenantID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatus_EngineStatusWithTenantID) ProtoMessage() {}

func (x *ServerStatus_EngineStatusWithTenantID) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_inference_server_internal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatus_EngineStatusWithTenantID.ProtoReflect.Descriptor instead.
func (*ServerStatus_EngineStatusWithTenantID) Descriptor() ([]byte, []int) {
	return file_api_v1_inference_server_internal_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ServerStatus_EngineStatusWithTenantID) GetEngineStatus() *EngineStatus {
	if x != nil {
		return x.EngineStatus
	}
	return nil
}

func (x *ServerStatus_EngineStatusWithTenantID) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

var File_api_v1_inference_server_internal_proto protoreflect.FileDescriptor

var file_api_v1_inference_server_internal_proto_rawDesc = []byte{
	0x0a, 0x26, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69,
	0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x02, 0x0a,
	0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6d, 0x0a, 0x0f, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x1a, 0x89, 0x01, 0x0a, 0x18, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x50, 0x0a, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x6c,
	0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x6c, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c,
	0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x7b, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x69,
	0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xb2, 0x01,
	0x0a, 0x18, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x12, 0x3a, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_inference_server_internal_proto_rawDescOnce sync.Once
	file_api_v1_inference_server_internal_proto_rawDescData = file_api_v1_inference_server_internal_proto_rawDesc
)

func file_api_v1_inference_server_internal_proto_rawDescGZIP() []byte {
	file_api_v1_inference_server_internal_proto_rawDescOnce.Do(func() {
		file_api_v1_inference_server_internal_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_inference_server_internal_proto_rawDescData)
	})
	return file_api_v1_inference_server_internal_proto_rawDescData
}

var file_api_v1_inference_server_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_v1_inference_server_internal_proto_goTypes = []interface{}{
	(*ServerStatus)(nil),                          // 0: llmariner.inference.server.v1.ServerStatus
	(*ProcessTasksInternalRequest)(nil),           // 1: llmariner.inference.server.v1.ProcessTasksInternalRequest
	(*ProcessTasksInternalResponse)(nil),          // 2: llmariner.inference.server.v1.ProcessTasksInternalResponse
	(*ServerStatus_EngineStatusWithTenantID)(nil), // 3: llmariner.inference.server.v1.ServerStatus.EngineStatusWithTenantID
	(*TaskResult)(nil),                            // 4: llmariner.inference.server.v1.TaskResult
	(*Task)(nil),                                  // 5: llmariner.inference.server.v1.Task
	(*EngineStatus)(nil),                          // 6: llmariner.inference.server.v1.EngineStatus
}
var file_api_v1_inference_server_internal_proto_depIdxs = []int32{
	3, // 0: llmariner.inference.server.v1.ServerStatus.engine_statuses:type_name -> llmariner.inference.server.v1.ServerStatus.EngineStatusWithTenantID
	0, // 1: llmariner.inference.server.v1.ProcessTasksInternalRequest.server_status:type_name -> llmariner.inference.server.v1.ServerStatus
	4, // 2: llmariner.inference.server.v1.ProcessTasksInternalRequest.task_result:type_name -> llmariner.inference.server.v1.TaskResult
	5, // 3: llmariner.inference.server.v1.ProcessTasksInternalResponse.new_task:type_name -> llmariner.inference.server.v1.Task
	6, // 4: llmariner.inference.server.v1.ServerStatus.EngineStatusWithTenantID.engine_status:type_name -> llmariner.inference.server.v1.EngineStatus
	1, // 5: llmariner.inference.server.v1.InferenceInternalService.ProcessTasksInternal:input_type -> llmariner.inference.server.v1.ProcessTasksInternalRequest
	2, // 6: llmariner.inference.server.v1.InferenceInternalService.ProcessTasksInternal:output_type -> llmariner.inference.server.v1.ProcessTasksInternalResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_v1_inference_server_internal_proto_init() }
func file_api_v1_inference_server_internal_proto_init() {
	if File_api_v1_inference_server_internal_proto != nil {
		return
	}
	file_api_v1_inference_server_proto_init()
	file_api_v1_inference_server_worker_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_inference_server_internal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_inference_server_internal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTasksInternalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_inference_server_internal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTasksInternalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_inference_server_internal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStatus_EngineStatusWithTenantID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_inference_server_internal_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ProcessTasksInternalRequest_ServerStatus)(nil),
		(*ProcessTasksInternalRequest_TaskResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_inference_server_internal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_inference_server_internal_proto_goTypes,
		DependencyIndexes: file_api_v1_inference_server_internal_proto_depIdxs,
		MessageInfos:      file_api_v1_inference_server_internal_proto_msgTypes,
	}.Build()
	File_api_v1_inference_server_internal_proto = out.File
	file_api_v1_inference_server_internal_proto_rawDesc = nil
	file_api_v1_inference_server_internal_proto_goTypes = nil
	file_api_v1_inference_server_internal_proto_depIdxs = nil
}
