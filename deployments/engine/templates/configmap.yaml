apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "inference-manager-engine.fullname" . }}
  labels:
    {{- include "inference-manager-engine.labels" . | nindent 4 }}
data:
  config.yaml: |
    runtime:
      pullerImage: {{ .Values.image.repository }}:{{ default .Chart.Version .Values.version }}
      tritonProxyImage: {{ .Values.tritonProxyImage.repository }}:{{ default .Chart.Version .Values.version }}
      runtimeImages:
        {{- toYaml .Values.runtime.runtimeImages | nindent 8 }}
      pullerImagePullPolicy: {{ .Values.runtime.imagePullPolicy }}
      tritonProxyImagePullPolicy: {{ .Values.runtime.imagePullPolicy }}
      runtimeImagePullPolicy: {{ .Values.runtime.imagePullPolicy }}
      {{- with .Values.runtime.imagePullSecrets }}
      runtimeImagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      configMapName: {{ include "inference-manager-engine.fullname" . }}
      {{- with .Values.global.awsSecret }}
      {{- if .name }}
      awsSecretName: {{ .name }}
      awsKeyIdEnvKey: {{ .accessKeyIdKey }}
      awsAccessKeyEnvKey: {{ .secretAccessKeyKey }}
      {{- end }}
      {{- end }}
      {{- with .Values.global.worker.registrationKeySecret }}
      {{- if .name }}
      llmoWorkerSecretName: {{ .name }}
      llmoKeyEnvKey: {{ .key }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ include "inference-manager-engine.serviceAccountName" . }}
      {{- with .Values.podAnnotations }}
      podAnnotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      pullerPort: {{ .Values.runtime.pullerPort }}
      {{- with .Values.runtime.env }}
      env:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.runtime.envFrom }}
      envFrom:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    ollama:
      keepAlive: {{ .Values.ollama.keepAlive }}
      numParallel: {{ .Values.ollama.maxConcurrentRequests }}
      forceSpreading: {{ .Values.ollama.forceSpreading }}
      debug: {{ .Values.ollama.debug }}
      runnersDir: {{ .Values.ollama.runnersDir }}
      dynamicModelLoading: {{ .Values.ollama.dynamicModelLoading }}
    vllm:
      dynamicLoRALoading: {{ .Values.vllm.dynamicLoRALoading }}
      loggingLevel: {{ .Values.vllm.loggingLevel }}
    {{- with .Values.nim }}
    nim:
      ngcApiKey: {{ .ngcApiKey | b64enc }}
      {{- with .models }}
      models:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    model:
      default:
        runtimeName: {{ .Values.model.default.runtimeName }}
        resources:
        {{- with .Values.model.default.resources }}
          {{- with .requests }}
          requests:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .limits }}
          limits:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .volume }}
          volume:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        replicas: {{ .Values.model.default.replicas }}
        preloaded: {{ .Values.model.default.preloaded }}
        contextLength: {{ .Values.model.default.contextLength }}
        {{- with .Values.model.default.vllmExtraFlags }}
        vllmExtraFlags:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        schedulerName: {{ .Values.model.default.schedulerName }}
        containerRuntimeClassName: {{ .Values.model.default.containerRuntimeClassName }}
      {{- with .Values.model.overrides }}
      overrides:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    healthPort: {{ .Values.healthPort }}
    metricsPort: {{ .Values.metricsPort }}
    {{- with .Values.gracefulShutdownTimeout }}
    gracefulShutdownTimeout: {{ . }}
    {{- end }}
    leaderElection:
      id: {{ include "inference-manager-engine.fullname" . }}
      {{- with .Values.leaderElection.leaseDuration }}
      leaseDuration: {{ . }}
      {{- end }}
      {{- with .Values.leaderElection.renewDeadline }}
      renewDeadline: {{ . }}
      {{- end }}
      {{- with .Values.leaderElection.retryPeriod }}
      retryPeriod: {{ . }}
      {{- end }}
    autoscaler:
      enable: {{ .Values.autoscaler.enable }}
      type: {{ .Values.autoscaler.type }}
      {{- with .Values.autoscaler.builtin }}
      builtin:
        initialDelay: {{ .initialDelay }}
        syncPeriod: {{ .syncPeriod }}
        scaleToZeroGracePeriod: {{ .scaleToZeroGracePeriod }}
        metricsWindow: {{ .metricsWindow }}
        {{- with .runtimeScalers }}
        runtimeScalers:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        defaultScaler:
          {{- toYaml .defaultScaler | nindent 10 }}
      {{- end }}
      {{- with .Values.autoscaler.keda }}
      keda:
        {{- with .pollingInterval }}
        pollingInterval: {{ . }}
        {{- end }}
        {{- with .cooldownPeriod }}
        cooldownPeriod: {{ . }}
        {{- end }}
        {{- with .idleReplicaCount }}
        idleReplicaCount: {{ . }}
        {{- end }}
        {{- with .minReplicaCount }}
        minReplicaCount: {{ . }}
        {{- end }}
        {{- with .maxReplicaCount }}
        maxReplicaCount: {{ . }}
        {{- end }}
        promServerAddress: {{ .promServerAddress }}
        promTriggers:
          {{- toYaml .promTriggers | nindent 10 }}
      {{- end }}
    {{- with .Values.preloadedModelIds }}
    preloadedModelIds:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.modelContextLengths }}
    modelContextLengths:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    inferenceManagerServerWorkerServiceAddr: {{ .Values.inferenceManagerServerWorkerServiceAddr }}
    modelManagerServerWorkerServiceAddr: {{ .Values.global.worker.controlPlaneAddr | default .Values.modelManagerServerWorkerServiceAddr }}
    componentStatusSender:
      enable: {{ .Values.componentStatusSender.enable }}
      name: {{ .Values.componentStatusSender.name }}
      initialDelay: {{ .Values.componentStatusSender.initialDelay }}
      interval: {{ .Values.componentStatusSender.interval }}
      clusterManagerServerWorkerServiceAddr: {{ .Values.global.worker.controlPlaneAddr | default .Values.componentStatusSender.clusterManagerServerWorkerServiceAddr }}
    worker:
      tls:
        enable: {{ .Values.global.worker.tls.enable }}
    objectStore:
      s3:
        endpointUrl: {{ .Values.global.objectStore.s3.endpointUrl }}
        region: {{ .Values.global.objectStore.s3.region }}
        insecureSkipVerify: {{ .Values.global.objectStore.s3.insecureSkipVerify }}
        bucket: {{ .Values.global.objectStore.s3.bucket }}
        {{- with .Values.global.objectStore.s3.assumeRole }}
        {{- if .roleArn }}
        assumeRole:
          roleArn: {{ .roleArn }}
          externalId: {{ .externalId }}
        {{- end }}
        {{- end }}
