// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: api/v1/inference_server_audio.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAudioTranscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []byte `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	// filename is not in the OpenAI API, but it is useful to reserve the filename
	// in the original form request.
	Filename       string  `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Model          string  `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Language       string  `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	Prompt         string  `protobuf:"bytes,4,opt,name=prompt,proto3" json:"prompt,omitempty"`
	ResponseFormat string  `protobuf:"bytes,6,opt,name=response_format,json=responseFormat,proto3" json:"response_format,omitempty"`
	Stream         bool    `protobuf:"varint,7,opt,name=stream,proto3" json:"stream,omitempty"`
	Temperature    float64 `protobuf:"fixed64,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
}

func (x *CreateAudioTranscriptionRequest) Reset() {
	*x = CreateAudioTranscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_inference_server_audio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAudioTranscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAudioTranscriptionRequest) ProtoMessage() {}

func (x *CreateAudioTranscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_inference_server_audio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAudioTranscriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateAudioTranscriptionRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_inference_server_audio_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAudioTranscriptionRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *CreateAudioTranscriptionRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *CreateAudioTranscriptionRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateAudioTranscriptionRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateAudioTranscriptionRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *CreateAudioTranscriptionRequest) GetResponseFormat() string {
	if x != nil {
		return x.ResponseFormat
	}
	return ""
}

func (x *CreateAudioTranscriptionRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *CreateAudioTranscriptionRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

var File_api_v1_inference_server_audio_proto protoreflect.FileDescriptor

var file_api_v1_inference_server_audio_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72,
	0x2e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x22, 0xfe, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x6c, 0x6d, 0x61, 0x72, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_inference_server_audio_proto_rawDescOnce sync.Once
	file_api_v1_inference_server_audio_proto_rawDescData = file_api_v1_inference_server_audio_proto_rawDesc
)

func file_api_v1_inference_server_audio_proto_rawDescGZIP() []byte {
	file_api_v1_inference_server_audio_proto_rawDescOnce.Do(func() {
		file_api_v1_inference_server_audio_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_inference_server_audio_proto_rawDescData)
	})
	return file_api_v1_inference_server_audio_proto_rawDescData
}

var file_api_v1_inference_server_audio_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_v1_inference_server_audio_proto_goTypes = []interface{}{
	(*CreateAudioTranscriptionRequest)(nil), // 0: llmariner.audio.server.v1.CreateAudioTranscriptionRequest
}
var file_api_v1_inference_server_audio_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_v1_inference_server_audio_proto_init() }
func file_api_v1_inference_server_audio_proto_init() {
	if File_api_v1_inference_server_audio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_inference_server_audio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAudioTranscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_inference_server_audio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_inference_server_audio_proto_goTypes,
		DependencyIndexes: file_api_v1_inference_server_audio_proto_depIdxs,
		MessageInfos:      file_api_v1_inference_server_audio_proto_msgTypes,
	}.Build()
	File_api_v1_inference_server_audio_proto = out.File
	file_api_v1_inference_server_audio_proto_rawDesc = nil
	file_api_v1_inference_server_audio_proto_goTypes = nil
	file_api_v1_inference_server_audio_proto_depIdxs = nil
}
